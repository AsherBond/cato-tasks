<tasks><task code="ex-012" concurrent_instances="" name="Example - Ssh Non Ec2" on_conflict="cancel" original_task_id="8bb7943d-a6d9-11e2-a652-c8bcc89d4845" queue_depth="" status="Development" version="1.000"><description>An example of using ssh to login to a linux machine and run shell commands. This is how to use ssh using a user id and password. Also demonstrates running a multi-line script in bash.</description><parameters><parameter constraint="" constraint_msg="" encrypt="false" id="p_89d09438-a3c4-11e2-b691-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>address</name><desc>Instance id to login to</desc><values present_as="value"><value id="pv_1e73fddc-a6db-11e2-9960-c8bcc89d4845" /></values></parameter><parameter constraint="" constraint_msg="" encrypt="false" id="p_95f6e438-a3c4-11e2-8af2-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>user</name><desc>User to use to login</desc><values present_as="value"><value id="pv_95f80759-a3c4-11e2-a72c-c8bcc89d4845" /></values></parameter><parameter constraint="" constraint_msg="" encrypt="false" id="p_6d0356cf-a6d3-11e2-bc2b-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>password</name><desc /><values present_as="value"><value id="pv_3907363d-a6db-11e2-af75-c8bcc89d4845" /></values></parameter></parameters><codeblocks><codeblock name="MAIN"><steps><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>connecting to an linux machine using ssh without a private key</description><function name="new_connection" snip="conn_name">
					<conn_type input_type="select">ssh</conn_type>
					<cloud_name input_type="dropdown" style="combo" />
					<asset input_type="text">userid=[[user]] address=[[address]] password=[[password]]</asset>
					<conn_name class="w200px" help="Name this connection for reference in the Task." input_type="text" label="as" required="true">CONN1</conn_name>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>an example of executing a here document bash script</description><function name="cmd_line" parse_method="2" snip="command" variables="true">
					<conn_name break_after="true" connection_picker="true" input_type="text" label="Connection" required="true">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" label_style="display: block;" required="true" rows="3">/bin/bash &lt;&lt;EOF
echo "hello world" &gt; /tmp/cato_sample.txt
cat /tmp/cato_sample.txt &gt; /tmp/cato_sample2.txt
cp /tmp/cato_sample2.txt /tmp/cato_sample3.txt
cp /tmp/cato_sample3.txt /tmp/cato_sample4.txt
cp /tmp/cato_sample4.txt /tmp/cato_sample5.txt
cp /tmp/cato_sample5.txt /tmp/cato_sample6.txt
EOF</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
					<positive_response break_after="true" input_type="text" label="Positive Response" option_tab="Options" />
					<negative_response break_after="true" input_type="text" label="Negative Response" option_tab="Options" />
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="10" output_parse_type="2" output_row_delimiter="10"><description>processing output from a command</description><function col_delimiter="10" name="cmd_line" parse_method="2" row_delimiter="10" snip="command" variables="true">
					<conn_name break_after="true" connection_picker="true" input_type="text" label="Connection" required="true">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" label_style="display: block;" required="true" rows="3">ls -1 /tmp/cato_sample*.txt</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
					<positive_response break_after="true" input_type="text" label="Positive Response" option_tab="Options" />
					<negative_response break_after="true" input_type="text" label="Negative Response" option_tab="Options" />
				<step_variables><variable><name>filename</name><type>delimited</type><position>1</position></variable></step_variables></function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>spin through the results and remove the files</description><function name="loop">
					<start input_type="text">1</start>
					<counter input_type="text">z</counter>
					<test input_type="select">&lt;=</test>
					<compare_to input_type="text">[[filename,*]]</compare_to>
					<increment input_type="text">1</increment>
					<action><function name="cmd_line" parse_method="2" snip="command" variables="true">
					<conn_name break_after="true" connection_picker="true" input_type="text" label="connection" required="true">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="command" label_style="display: block;" required="true" rows="3">rm [[filename,[[z]]]]</command>
					<timeout break_after="true" input_type="text" label="timeout" option_tab="options" />
					<positive_response break_after="true" input_type="text" label="positive response" option_tab="options" />
					<negative_response break_after="true" input_type="text" label="negative response" option_tab="options" />
				</function></action>
					<max input_type="text" />
				</function></step></steps></codeblock></codeblocks></task></tasks>