<tasks><task code="ex-17" concurrent_instances="" name="Example - Winrm" original_task_id="7f87ee2e-82bb-43ba-a364-dbd5f31c349c" queue_depth="" status="Development" version="1.000"><description>Demonstrates how to connect to a winrm enabled Windows server and run both powershell and DOS commands.</description><parameters><parameter constraint="" constraint_msg="" encrypt="false" id="p_a08da826-6831-11e3-847d-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>address</name><desc>The server FQDN or ip address</desc><values present_as="value"><value id="pv_a08e4999-6831-11e3-a7ef-c8bcc89d4845" /></values></parameter><parameter constraint="" constraint_msg="" encrypt="false" id="p_c37d8561-6831-11e3-825a-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>user</name><desc>user</desc><values present_as="value"><value id="pv_c37e86c2-6831-11e3-9256-c8bcc89d4845" /></values></parameter><parameter constraint="" constraint_msg="" encrypt="false" id="p_ca3b508a-6831-11e3-9cd9-c8bcc89d4845" maxlength="" maxvalue="" minlength="" minvalue="" prompt="true" required="true"><name>password</name><desc>password</desc><values present_as="value"><value id="pv_ca3c5af0-6831-11e3-ae5f-c8bcc89d4845" /></values></parameter></parameters><codeblocks><codeblock name="MAIN"><steps><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>connect to windows server</description><function name="new_connection" snip="conn_name">
					<conn_type input_type="select">winrm</conn_type>
					<cloud_name input_type="dropdown" style="combo" />
					<asset input_type="text">address=[[address]] userid=[[user]] password=[[password]] protocol=http port=5985</asset>
					<conn_name class="w200px" help="Name this connection for reference in the Task." input_type="text" label="as" required="true">CONN1</conn_name>
					<debug break_after="true" input_type="checkbox" label="Debug">0</debug>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>t is a text file, s is a powershell script that writes the file</description><function name="set_variable">
					<variables label="Variables">
						<variable label="Variable">
							<name input_type="text" label="Name">t</name>
							<value input_type="text" label="Value">Hello

"Cruel"
'#@$*&amp;&amp;($}
World!</value>
							<modifier input_type="select" label="Modifier" />
						</variable>
					<variable label="Variable">
							<name input_type="text" label="Name">s</name>
							<value input_type="text" label="Value">$stream = [System.IO.StreamWriter] "c:\csk_test.txt"
$s = @"
[[t]]
"@ | %{ $_.Replace("`n","`r`n") }
$stream.WriteLine($s)
$stream.close()</value>
							<modifier input_type="select" label="Modifier">TO_BASE64_UTF16</modifier>
						</variable></variables>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>run the powershell script</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">powershell -encodedcommand [[s]]</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
					<return_code break_after="true" input_type="text" label="Return Code" option_tab="Options">r</return_code>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>dos command example</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">dir c:\</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
					<return_code break_after="true" input_type="text" label="Return Code" option_tab="Options">r</return_code>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>return code from the dos command</description><function name="log_msg" snip="message">
					<message class="w95pct" input_type="textarea" label="Log" label_style="display: block;" required="true" rows="2">return code was [[r]]</message>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>cat our sample file that was dropped on the server</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">type c:\csk_test.txt</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>delete the file</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">del c:\csk_test.txt</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>list the file that was deleted (hint the return code should be 1 indicating an error)</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">dir c:\csk_test.txt</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
					<return_code break_after="true" input_type="text" label="Return Code" option_tab="Options">r</return_code>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>print the return code</description><function name="log_msg" snip="message">
					<message class="w95pct" input_type="textarea" label="Log" label_style="display: block;" required="true" rows="2">return code was [[r]]</message>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="32" output_parse_type="2" output_row_delimiter="10"><description>one way to get the load percentage from the server, example of setting variables</description><function col_delimiter="32" name="winrm_cmd" parse_method="2" row_delimiter="10" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">wmic cpu get loadpercentage | findstr /V LoadPercentage</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
				<step_variables><variable><name>v1</name><type>delimited</type><position>1</position></variable><variable><name>v2</name><type>delimited</type><position>2</position></variable><variable><name>v3</name><type>delimited</type><position>3</position></variable><variable><name>v4</name><type>delimited</type><position>4</position></variable><variable><name>v5</name><type>delimited</type><position>5</position></variable><variable><name>v6</name><type>delimited</type><position>6</position></variable></step_variables></function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>loop through the results and print</description><function name="loop">
					<start input_type="text">1</start>
					<counter input_type="text">z</counter>
					<test input_type="select">&lt;=</test>
					<compare_to input_type="text">[[v1,*]]</compare_to>
					<increment input_type="text">1</increment>
					<action><function name="log_msg" snip="message">
					<message class="w95pct" input_type="textarea" label="Log" label_style="display: block;" required="true" rows="2">-[[v1,[[z]]]]- -[[v2,[[z]]]]- -[[v3,[[z]]]]- -[[v4,[[z]]]]- -[[v5,[[z]]]]- -[[v6,[[z]]]]-</message>
				</function></action>
					<max input_type="text" />
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>setup a new powershell script, must be base64 utf16 encoded</description><function name="set_variable">
					<variables label="Variables">
						<variable label="Variable">
							<name input_type="text" label="Name">s</name>
							<value input_type="text" label="Value">$HostInfo = @()

$ProcessorStats = Get-WmiObject win32_processor -computer .
$ComputerCpu = $ProcessorStats.LoadPercentage 
$OperatingSystem = Get-WmiObject win32_OperatingSystem -computer .
$FreeMemory = $OperatingSystem.FreePhysicalMemory
$TotalMemory = $OperatingSystem.TotalVisibleMemorySize
$MemoryUsed = ($FreeMemory/ $TotalMemory) * 100
$PercentMemoryUsed = "{0:N2}" -f $MemoryUsed

$objHostInfo = New-Object System.Object
$objHostInfo | Add-Member -MemberType NoteProperty -Name CPULoadPercent -Value $ComputerCpu
$objHostInfo | Add-Member -MemberType NoteProperty -Name MemoryUsedPercent -Value $PercentMemoryUsed

# Lets output to the console
$objHostInfo</value>
							<modifier input_type="select" label="Modifier">TO_BASE64_UTF16</modifier>
						</variable>
					</variables>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="2" output_row_delimiter="0"><description>run the powershell script</description><function name="winrm_cmd" parse_method="2" snip="command" variables="true">
					<conn_name connection_picker="true" input_type="text" label="Connection">CONN1</conn_name>
					<command class="w95pct" input_type="textarea" label="Command" rows="3" style="display: block;">powershell -encodedcommand [[s]]</command>
					<timeout break_after="true" input_type="text" label="Timeout" option_tab="Options" />
				</function></step></steps></codeblock></codeblocks></task></tasks>