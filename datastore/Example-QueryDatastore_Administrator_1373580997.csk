<tasks><task code="ex-014" concurrent_instances="" name="Example - Query Datastore" original_task_id="5824cbb6-8d6d-4afa-bcac-fd0f3f9d2f67" queue_depth="" status="Development" version="1.000"><description>This example queries an already existing datastore. It also shows how to insert, update and delete from a datastore collection.</description><codeblocks><codeblock name="MAIN"><steps><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Select all rows and columns from this collection</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1" />
					<columns is_array="true">
						</columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Select all servers and addresses not in use. This should be all rows again</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"inuse" : "false"}</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Column Name">servername</name>
							<variable input_type="text" label="Variable Name">servername</variable>
						</column>
					<column>
							<name input_type="text" label="Column Name">ipaddress</name>
							<variable input_type="text" label="Variable Name">ipaddress</variable>
						</column></columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Displaying the first server not in use</description><function name="log_msg" snip="message">
					<message class="w95pct" input_type="textarea" label="Log" label_style="display: block;" required="true" rows="2">the first one returned was [[servername]] with the address [[address]]</message>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Update the first not inuse server to be inuse, and set the person using it to you</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"servername" : "[[servername]]"}</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Column Name">inuse</name>
							<variable input_type="text" label="Variable Name">true</variable>
						</column>
					<column>
							<name input_type="text" label="Column Name">byperson</name>
							<variable input_type="text" label="Variable Name">[[_SUBMITTED_BY]]</variable>
						</column></columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Example of an upsert. Will update a row if it exists, otherwise an insert. This one exists, an update</description><function name="datastore_update">
                    <collection input_type="text" label="Collection" required="true">servers</collection>
                    <upsert input_type="checkbox" label="Upsert?:">1</upsert>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"servername" : "server11"}</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Name">ipaddress</name>
							<value input_type="text" label="Value" style="width: 50%;">123.123.123.123</value>
						</column><column>
							<name input_type="text" label="Name">inuse</name>
							<value input_type="text" label="Value" style="width: 50%;">false</value>
						</column></columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Another upsert, new row will insert</description><function name="datastore_update">
                    <collection input_type="text" label="Collection" required="true">servers</collection>
                    <upsert input_type="checkbox" label="Upsert?:">1</upsert>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"servername" : "server11"}</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Name">ipaddress</name>
							<value input_type="text" label="Value" style="width: 50%;">10.0.0.12</value>
						</column><column>
							<name input_type="text" label="Name">barf</name>
							<value input_type="text" label="Value" style="width: 50%;">yuck</value>
						</column></columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Get server2, just to prove it's there</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"servername" : "server2"}</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Column Name" />
							<variable input_type="text" label="Variable Name" />
						</column>
					</columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Now let's delete server2</description><function name="datastore_delete">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">{"servername" : "server2"}</query>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Will return all columns and rows, notice server2 is gone</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query class="w90pct" input_type="textarea" label="Query" label_style="display: block;" rows="1">[[query3]]</query>
					<columns is_array="true">
						<column>
							<name input_type="text" label="Column Name" />
							<variable input_type="text" label="Variable Name" />
						</column>
					</columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Will return all columns and rows</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query input_type="text" label="Query" />
					<columns is_array="true">
						</columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Returns three columns, all rows</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query input_type="text" label="Query" />
					<columns is_array="true">
						<column>
							<name input_type="text" label="Column Name">servername</name>
							<variable input_type="text" label="Variable Name">servername</variable>
						</column>
					<column>
							<name input_type="text" label="Column Name">inuse</name>
							<variable input_type="text" label="Variable Name">inuse</variable>
						</column><column>
							<name input_type="text" label="Column Name">junk</name>
							<variable input_type="text" label="Variable Name">junk</variable>
						</column></columns>
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Delete all rows</description><function name="datastore_delete">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query input_type="text" label="Query" />
				</function></step><step codeblock="MAIN" commented="false" output_column_delimiter="0" output_parse_type="0" output_row_delimiter="0"><description>Notice no rows left</description><function name="datastore_query">
                    <collection input_type="text" label="Collection">servers</collection>
                    <query input_type="text" label="Query" />
					<columns is_array="true">
						</columns>
				</function></step></steps></codeblock></codeblocks></task></tasks>